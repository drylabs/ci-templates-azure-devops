parameters:
  - name: TARGET_BRANCH_NAME
    type: string
    default: null

steps: 

  - task: PowerShell@2
    displayName: Create GIT TAG
    inputs:
      targetType: "inline"
      script: |
        Set-StrictMode -Version Latest
        $ErrorActionPreference = "Stop"
        $VerbosePreference = "Continue"
        $InformationPreference = "Continue"

        Write-Information "Installing Azure DevOps extension..."
        az extension add --name "azure-devops"
        az devops configure --defaults organization="$(System.TeamFoundationCollectionUri)" project="$(System.TeamProject)"

        Write-Information "Creating temporary folder..."
        $temporaryFolderPath = Join-Path "$(Agent.TempDirectory)" "git"
        New-Item -Path "$temporaryFolderPath" -ItemType "Directory"

        $branchName = ("${{ parameters.TARGET_BRANCH_NAME }}" -ne $null) ? "${{ parameters.TARGET_BRANCH_NAME }}" : "$(Build.SourceBranchName)"
        $repositoryName = "$(Build.Repository.Name)"
  
        Write-Information "Cloning branch $branchName in repository $repositoryName..."
        $cloneUrl = az repos show --repository "$repositoryName" --query "remoteUrl" --output tsv
  
        Write-Information "Clone URL is $cloneUrl"
        git -c http.extraheader="AUTHORIZATION: Bearer $(System.AccessToken)" clone --branch "$branchName" --depth 1 "$cloneUrl" "$temporaryFolderPath"
        if ($LASTEXITCODE -ne 0) { throw "Cloning branch $branchName in repository $repositoryName failed." }
        cd "$temporaryFolderPath"

        Write-Information "Setting git user information..."
        git config --global user.email "azuredevopsagent@azuredevops.com"
        git config --global user.name "Azure Devops agent"

        Write-Information "Commiting empty "
        $commitEmptyOutput = git commit --allow-empty --message "ci: atualizador $(Build.BuildNumber)"
        if ($LASTEXITCODE -ne 0) { 
          if ($commitEmptyOutput.Contains("nothing to commit, working tree clean")) {
            Write-Information "No changes exist to be published."
            return
          }
          throw "Committing Empty failed." 
        }

        Write-Information "Committing TAG"
        $commitTagOutput = git tag -a $(Build.BuildNumber) -m "$(Build.BuildNumber)"
        if ($LASTEXITCODE -ne 0) { 
          throw "Committing Git TAG failed." 
        }

        Write-Information "Pushing changes"
        git -c http.extraheader="AUTHORIZATION: Bearer $(System.AccessToken)" push --tags --set-upstream origin "$branchName"
        if ($LASTEXITCODE -ne 0) { throw "Pushing Git TAGS failed." }

        Write-Information "Deleting temporary folder contents..."
        cd "$(Agent.TempDirectory)"
        Remove-Item -Path "$temporaryFolderPath" -Recurse -Force

        Write-Information "Execution complete."

      pwsh: true
    env:
      AZURE_DEVOPS_EXT_PAT: "$(System.AccessToken)"
